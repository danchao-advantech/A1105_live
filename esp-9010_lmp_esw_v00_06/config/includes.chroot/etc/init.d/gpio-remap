#! /bin/sh
### BEGIN INIT INFO
# Provides:             gpio-remap
# Required-Start:       
# Required-Stop:        
# Default-Start:        
# Default-Stop:         
# Short-Description:    enable gpio: 1. load kernel modules
#                                    2. set direction/value
#                                    3. create symlink files in tmpfs
### END INIT INFO

N=/etc/init.d/gpio-remap

set -e

### Folder define ###############################
TMP_FOLD=/tmp
GPIO_FOLD=$TMP_FOLD/gpio
SYS_GPIO_FOLD=/sys/class/gpio
#######################################
# GPIO range:
#   switch board :          base ~ (base+stepx1-1)
#######################################
GPIO_ID_STEP=100
GPIO_ID_BASE_SB=0
#################################################

# Load kernel modules
load_modules () {
	if [ `lsmod | grep -c "at24 "` -eq 0 ]; then
		insmod /lib/modules/`uname -r`/kernel/drivers/misc/eeprom/at24.ko
	fi
	if [ `lsmod | grep -c "i2c_mux "` -eq 0 ]; then
		insmod /lib/modules/`uname -r`/kernel/drivers/i2c/i2c-mux.ko
	fi
	if [ `lsmod | grep -c "i2c_mux_pca954x "` -eq 0 ]; then
		insmod /lib/modules/`uname -r`/kernel/drivers/i2c/muxes/i2c-mux-pca954x.ko
	fi
	if [ `lsmod | grep -c "esp9010_sb_i2c "` -eq 0 ]; then
		insmod /lib/modules/`uname -r`/kernel/drivers/platform/x86/esp9010_sb_i2c.ko
	fi
}

# Check related folders exist or not first and create gpio folder in tmpfs
check_create_gpio_folder () {
	if [ ! -d $SYS_GPIO_FOLD ]; then
		echo "Error: Please setup \"GPIO Support\" of kernel module"
		exit 1
	fi
	if [ ! -d $TMP_FOLD ]; then
		echo "Error: Please mount tmpfs"
		exit 1
	fi
	if [ ! -d $GPIO_FOLD ]; then
		mkdir $GPIO_FOLD
	fi
}

# Apply default direction and value to output pin
__apply_gpio_output_pin () {
	local GNUM=$1
	local GVAL=$2

	if [ -e $SYS_GPIO_FOLD/gpio$GNUM/direction ]; then
		local GDIR=`cat $SYS_GPIO_FOLD/gpio$GNUM/direction`
		if [ -z $GDIR ]; then
			GDIR=NULL
		fi
		if [ $GDIR != out ]; then
			echo "out" > $SYS_GPIO_FOLD/gpio$GNUM/direction
			echo $GVAL > $SYS_GPIO_FOLD/gpio$GNUM/value
		fi
	fi
}

init_gpio_sb () {
	# tx_disable
	__apply_gpio_output_pin $(expr $GPIO_ID_BASE_SB + 3) 0
	__apply_gpio_output_pin $(expr $GPIO_ID_BASE_SB + 7) 0
	__apply_gpio_output_pin $(expr $GPIO_ID_BASE_SB + 11) 0
	__apply_gpio_output_pin $(expr $GPIO_ID_BASE_SB + 15) 0
	__apply_gpio_output_pin $(expr $GPIO_ID_BASE_SB + 19) 0
	__apply_gpio_output_pin $(expr $GPIO_ID_BASE_SB + 23) 0
	__apply_gpio_output_pin $(expr $GPIO_ID_BASE_SB + 27) 0
	__apply_gpio_output_pin $(expr $GPIO_ID_BASE_SB + 31) 0
	# mod_rst
	__apply_gpio_output_pin $(expr $GPIO_ID_BASE_SB + 32) 1
	# mod_select
	__apply_gpio_output_pin $(expr $GPIO_ID_BASE_SB + 33) 0
	# mod_rst
	__apply_gpio_output_pin $(expr $GPIO_ID_BASE_SB + 36) 1
	# mod_select
	__apply_gpio_output_pin $(expr $GPIO_ID_BASE_SB + 37) 0
}

# Create gpioX symlink to tmpfs
__create_symlink () {
	local GNUM=$1
	local GFOLD=$2
	local SNAME=$3

	if [ -e $SYS_GPIO_FOLD/gpio$GNUM/value ]; then
		ln -f -s $SYS_GPIO_FOLD/gpio$GNUM/value $GFOLD/$SNAME
	fi
}

create_link_gpio_sb () {
	local GPIO_FOLD_SFP_1=$GPIO_FOLD/sfp1
	local GPIO_FOLD_SFP_2=$GPIO_FOLD/sfp2
	local GPIO_FOLD_SFP_3=$GPIO_FOLD/sfp3
	local GPIO_FOLD_SFP_4=$GPIO_FOLD/sfp4
	local GPIO_FOLD_SFP_5=$GPIO_FOLD/sfp5
	local GPIO_FOLD_SFP_6=$GPIO_FOLD/sfp6
	local GPIO_FOLD_SFP_7=$GPIO_FOLD/sfp7
	local GPIO_FOLD_SFP_8=$GPIO_FOLD/sfp8
	local GPIO_FOLD_QSFP_1=$GPIO_FOLD/qsfp1
	local GPIO_FOLD_QSFP_2=$GPIO_FOLD/qsfp2
	local GPIO_TX_FAU_NAME="tx_fault"
	local GPIO_MOD_ABS_NAME="mod_abs"
	local GPIO_RX_LOS_NAME="rx_los"
	local GPIO_TX_DIS_NAME="tx_disable"
	local GPIO_Q_FAU_NAME="mod_fault"
	local GPIO_Q_ABS_NAME="mod_abs"
	local GPIO_Q_RST_NAME="mod_rst"
	local GPIO_Q_SEL_NAME="mod_select"

	if [ -d $GPIO_FOLD ] && [ ! -d $GPIO_FOLD_SFP_1 ]; then
		mkdir $GPIO_FOLD_SFP_1
	fi
	if [ -d $GPIO_FOLD_SFP_1 ]; then
		__create_symlink $(expr $GPIO_ID_BASE_SB + 0) $GPIO_FOLD_SFP_1 $GPIO_TX_FAU_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 1) $GPIO_FOLD_SFP_1 $GPIO_MOD_ABS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 2) $GPIO_FOLD_SFP_1 $GPIO_RX_LOS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 3) $GPIO_FOLD_SFP_1 $GPIO_TX_DIS_NAME
	fi
	if [ -d $GPIO_FOLD ] && [ ! -d $GPIO_FOLD_SFP_2 ]; then
		mkdir $GPIO_FOLD_SFP_2
	fi
	if [ -d $GPIO_FOLD_SFP_2 ]; then
		__create_symlink $(expr $GPIO_ID_BASE_SB + 4) $GPIO_FOLD_SFP_2 $GPIO_TX_FAU_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 5) $GPIO_FOLD_SFP_2 $GPIO_MOD_ABS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 6) $GPIO_FOLD_SFP_2 $GPIO_RX_LOS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 7) $GPIO_FOLD_SFP_2 $GPIO_TX_DIS_NAME
	fi
	if [ -d $GPIO_FOLD ] && [ ! -d $GPIO_FOLD_SFP_3 ]; then
		mkdir $GPIO_FOLD_SFP_3
	fi
	if [ -d $GPIO_FOLD_SFP_3 ]; then
		__create_symlink $(expr $GPIO_ID_BASE_SB + 8) $GPIO_FOLD_SFP_3 $GPIO_TX_FAU_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 9) $GPIO_FOLD_SFP_3 $GPIO_MOD_ABS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 10) $GPIO_FOLD_SFP_3 $GPIO_RX_LOS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 11) $GPIO_FOLD_SFP_3 $GPIO_TX_DIS_NAME
	fi
	if [ -d $GPIO_FOLD ] && [ ! -d $GPIO_FOLD_SFP_4 ]; then
		mkdir $GPIO_FOLD_SFP_4
	fi
	if [ -d $GPIO_FOLD_SFP_4 ]; then
		__create_symlink $(expr $GPIO_ID_BASE_SB + 12) $GPIO_FOLD_SFP_4 $GPIO_TX_FAU_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 13) $GPIO_FOLD_SFP_4 $GPIO_MOD_ABS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 14) $GPIO_FOLD_SFP_4 $GPIO_RX_LOS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 15) $GPIO_FOLD_SFP_4 $GPIO_TX_DIS_NAME
	fi
	if [ -d $GPIO_FOLD ] && [ ! -d $GPIO_FOLD_SFP_5 ]; then
		mkdir $GPIO_FOLD_SFP_5
	fi
	if [ -d $GPIO_FOLD_SFP_5 ]; then
		__create_symlink $(expr $GPIO_ID_BASE_SB + 16) $GPIO_FOLD_SFP_5 $GPIO_TX_FAU_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 17) $GPIO_FOLD_SFP_5 $GPIO_MOD_ABS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 18) $GPIO_FOLD_SFP_5 $GPIO_RX_LOS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 19) $GPIO_FOLD_SFP_5 $GPIO_TX_DIS_NAME
	fi
	if [ -d $GPIO_FOLD ] && [ ! -d $GPIO_FOLD_SFP_6 ]; then
		mkdir $GPIO_FOLD_SFP_6
	fi
	if [ -d $GPIO_FOLD_SFP_6 ]; then
		__create_symlink $(expr $GPIO_ID_BASE_SB + 20) $GPIO_FOLD_SFP_6 $GPIO_TX_FAU_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 21) $GPIO_FOLD_SFP_6 $GPIO_MOD_ABS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 22) $GPIO_FOLD_SFP_6 $GPIO_RX_LOS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 23) $GPIO_FOLD_SFP_6 $GPIO_TX_DIS_NAME
	fi
	if [ -d $GPIO_FOLD ] && [ ! -d $GPIO_FOLD_SFP_7 ]; then
		mkdir $GPIO_FOLD_SFP_7
	fi
	if [ -d $GPIO_FOLD_SFP_7 ]; then
		__create_symlink $(expr $GPIO_ID_BASE_SB + 24) $GPIO_FOLD_SFP_7 $GPIO_TX_FAU_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 25) $GPIO_FOLD_SFP_7 $GPIO_MOD_ABS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 26) $GPIO_FOLD_SFP_7 $GPIO_RX_LOS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 27) $GPIO_FOLD_SFP_7 $GPIO_TX_DIS_NAME
	fi
	if [ -d $GPIO_FOLD ] && [ ! -d $GPIO_FOLD_SFP_8 ]; then
		mkdir $GPIO_FOLD_SFP_8
	fi
	if [ -d $GPIO_FOLD_SFP_8 ]; then
		__create_symlink $(expr $GPIO_ID_BASE_SB + 28) $GPIO_FOLD_SFP_8 $GPIO_TX_FAU_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 29) $GPIO_FOLD_SFP_8 $GPIO_MOD_ABS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 30) $GPIO_FOLD_SFP_8 $GPIO_RX_LOS_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 31) $GPIO_FOLD_SFP_8 $GPIO_TX_DIS_NAME
	fi
	if [ -d $GPIO_FOLD ] && [ ! -d $GPIO_FOLD_QSFP_1 ]; then
		mkdir $GPIO_FOLD_QSFP_1
	fi
	if [ -d $GPIO_FOLD_QSFP_1 ]; then
		__create_symlink $(expr $GPIO_ID_BASE_SB + 32) $GPIO_FOLD_QSFP_1 $GPIO_Q_RST_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 33) $GPIO_FOLD_QSFP_1 $GPIO_Q_SEL_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 35) $GPIO_FOLD_QSFP_1 $GPIO_Q_ABS_NAME
	fi
	if [ -d $GPIO_FOLD ] && [ ! -d $GPIO_FOLD_QSFP_2 ]; then
		mkdir $GPIO_FOLD_QSFP_2
	fi
	if [ -d $GPIO_FOLD_QSFP_2 ]; then
		__create_symlink $(expr $GPIO_ID_BASE_SB + 36) $GPIO_FOLD_QSFP_2 $GPIO_Q_RST_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 37) $GPIO_FOLD_QSFP_2 $GPIO_Q_SEL_NAME
		__create_symlink $(expr $GPIO_ID_BASE_SB + 39) $GPIO_FOLD_QSFP_2 $GPIO_Q_ABS_NAME
	fi
}

case "$1" in
  start)
	load_modules
	check_create_gpio_folder
	init_gpio_sb
	create_link_gpio_sb
	;;
  stop|reload|restart|force-reload)
	;;
  *)
	echo "Usage: $N {start}" >&2
	exit 1
	;;
esac

exit 0
